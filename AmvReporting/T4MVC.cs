// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments
#pragma warning disable 1591
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
public static class MVC
{
    public static AmvReporting.Controllers.DatabaseController Database = new AmvReporting.Controllers.T4MVC_DatabaseController();
    public static AmvReporting.Controllers.HomeController Home = new AmvReporting.Controllers.T4MVC_HomeController();
    public static AmvReporting.Controllers.MenuController Menu = new AmvReporting.Controllers.T4MVC_MenuController();
    public static AmvReporting.Controllers.PreviewController Preview = new AmvReporting.Controllers.T4MVC_PreviewController();
    public static AmvReporting.Controllers.ReportController Report = new AmvReporting.Controllers.T4MVC_ReportController();
    public static AmvReporting.Controllers.ReportGroupController ReportGroup = new AmvReporting.Controllers.T4MVC_ReportGroupController();
    public static T4MVC.SharedController Shared = new T4MVC.SharedController();
}

namespace T4MVC
{
}

namespace T4MVC
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class Dummy
    {
        private Dummy() { }
        public static Dummy Instance = new Dummy();
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_ActionResult : System.Web.Mvc.ActionResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_ActionResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
     
    public override void ExecuteResult(System.Web.Mvc.ControllerContext context) { }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}
[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_PartialViewResult : System.Web.Mvc.PartialViewResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_PartialViewResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}



namespace Links
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Scripts {
        private const string URLPATH = "~/Scripts";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        public static readonly string _references_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/_references.min.js") ? Url("_references.min.js") : Url("_references.js");
        public static readonly string amplify_store_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/amplify.store.min.js") ? Url("amplify.store.min.js") : Url("amplify.store.js");
        public static readonly string bootstrap_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap.min.js") ? Url("bootstrap.min.js") : Url("bootstrap.js");
        public static readonly string bootstrap_min_js = Url("bootstrap.min.js");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class DataTables_1_9_4 {
            private const string URLPATH = "~/Scripts/DataTables-1.9.4";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class docs {
                private const string URLPATH = "~/Scripts/DataTables-1.9.4/docs";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class media {
                    private const string URLPATH = "~/Scripts/DataTables-1.9.4/docs/media";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class js {
                        private const string URLPATH = "~/Scripts/DataTables-1.9.4/docs/media/js";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string doc_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/doc.min.js") ? Url("doc.min.js") : Url("doc.js");
                        public static readonly string jquery_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.min.js") ? Url("jquery.min.js") : Url("jquery.js");
                        public static readonly string shBrushJScript_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shBrushJScript.min.js") ? Url("shBrushJScript.min.js") : Url("shBrushJScript.js");
                        public static readonly string shCore_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shCore.min.js") ? Url("shCore.min.js") : Url("shCore.js");
                    }
                
                }
            
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class extras {
                private const string URLPATH = "~/Scripts/DataTables-1.9.4/extras";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class AutoFill {
                    private const string URLPATH = "~/Scripts/DataTables-1.9.4/extras/AutoFill";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class media {
                        private const string URLPATH = "~/Scripts/DataTables-1.9.4/extras/AutoFill/media";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class docs {
                            private const string URLPATH = "~/Scripts/DataTables-1.9.4/extras/AutoFill/media/docs";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class media {
                                private const string URLPATH = "~/Scripts/DataTables-1.9.4/extras/AutoFill/media/docs/media";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                public static class js {
                                    private const string URLPATH = "~/Scripts/DataTables-1.9.4/extras/AutoFill/media/docs/media/js";
                                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                    public static readonly string doc_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/doc.min.js") ? Url("doc.min.js") : Url("doc.js");
                                    public static readonly string jquery_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.min.js") ? Url("jquery.min.js") : Url("jquery.js");
                                    public static readonly string shBrushJScript_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shBrushJScript.min.js") ? Url("shBrushJScript.min.js") : Url("shBrushJScript.js");
                                    public static readonly string shCore_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shCore.min.js") ? Url("shCore.min.js") : Url("shCore.js");
                                }
                            
                            }
                        
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class js {
                            private const string URLPATH = "~/Scripts/DataTables-1.9.4/extras/AutoFill/media/js";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string AutoFill_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/AutoFill.min.js") ? Url("AutoFill.min.js") : Url("AutoFill.js");
                            public static readonly string AutoFill_min_js = Url("AutoFill.min.js");
                            public static readonly string AutoFill_min_js_gz = Url("AutoFill.min.js.gz");
                        }
                    
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class ColReorder {
                    private const string URLPATH = "~/Scripts/DataTables-1.9.4/extras/ColReorder";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class media {
                        private const string URLPATH = "~/Scripts/DataTables-1.9.4/extras/ColReorder/media";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class docs {
                            private const string URLPATH = "~/Scripts/DataTables-1.9.4/extras/ColReorder/media/docs";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class media {
                                private const string URLPATH = "~/Scripts/DataTables-1.9.4/extras/ColReorder/media/docs/media";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                public static class js {
                                    private const string URLPATH = "~/Scripts/DataTables-1.9.4/extras/ColReorder/media/docs/media/js";
                                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                    public static readonly string doc_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/doc.min.js") ? Url("doc.min.js") : Url("doc.js");
                                    public static readonly string jquery_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.min.js") ? Url("jquery.min.js") : Url("jquery.js");
                                    public static readonly string shBrushJScript_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shBrushJScript.min.js") ? Url("shBrushJScript.min.js") : Url("shBrushJScript.js");
                                    public static readonly string shCore_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shCore.min.js") ? Url("shCore.min.js") : Url("shCore.js");
                                }
                            
                            }
                        
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class js {
                            private const string URLPATH = "~/Scripts/DataTables-1.9.4/extras/ColReorder/media/js";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string ColReorder_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ColReorder.min.js") ? Url("ColReorder.min.js") : Url("ColReorder.js");
                            public static readonly string ColReorder_min_js = Url("ColReorder.min.js");
                            public static readonly string ColReorder_min_js_gz = Url("ColReorder.min.js.gz");
                        }
                    
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class ColVis {
                    private const string URLPATH = "~/Scripts/DataTables-1.9.4/extras/ColVis";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class media {
                        private const string URLPATH = "~/Scripts/DataTables-1.9.4/extras/ColVis/media";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class docs {
                            private const string URLPATH = "~/Scripts/DataTables-1.9.4/extras/ColVis/media/docs";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class media {
                                private const string URLPATH = "~/Scripts/DataTables-1.9.4/extras/ColVis/media/docs/media";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                public static class js {
                                    private const string URLPATH = "~/Scripts/DataTables-1.9.4/extras/ColVis/media/docs/media/js";
                                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                    public static readonly string doc_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/doc.min.js") ? Url("doc.min.js") : Url("doc.js");
                                    public static readonly string jquery_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.min.js") ? Url("jquery.min.js") : Url("jquery.js");
                                    public static readonly string shBrushJScript_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shBrushJScript.min.js") ? Url("shBrushJScript.min.js") : Url("shBrushJScript.js");
                                    public static readonly string shCore_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shCore.min.js") ? Url("shCore.min.js") : Url("shCore.js");
                                }
                            
                            }
                        
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class js {
                            private const string URLPATH = "~/Scripts/DataTables-1.9.4/extras/ColVis/media/js";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string ColVis_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ColVis.min.js") ? Url("ColVis.min.js") : Url("ColVis.js");
                            public static readonly string ColVis_min_js = Url("ColVis.min.js");
                            public static readonly string ColVis_min_js_gz = Url("ColVis.min.js.gz");
                        }
                    
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class FixedColumns {
                    private const string URLPATH = "~/Scripts/DataTables-1.9.4/extras/FixedColumns";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class docs {
                        private const string URLPATH = "~/Scripts/DataTables-1.9.4/extras/FixedColumns/docs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class media {
                            private const string URLPATH = "~/Scripts/DataTables-1.9.4/extras/FixedColumns/docs/media";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class js {
                                private const string URLPATH = "~/Scripts/DataTables-1.9.4/extras/FixedColumns/docs/media/js";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                public static readonly string doc_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/doc.min.js") ? Url("doc.min.js") : Url("doc.js");
                                public static readonly string jquery_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.min.js") ? Url("jquery.min.js") : Url("jquery.js");
                                public static readonly string shBrushJScript_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shBrushJScript.min.js") ? Url("shBrushJScript.min.js") : Url("shBrushJScript.js");
                                public static readonly string shCore_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shCore.min.js") ? Url("shCore.min.js") : Url("shCore.js");
                            }
                        
                        }
                    
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class media {
                        private const string URLPATH = "~/Scripts/DataTables-1.9.4/extras/FixedColumns/media";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class js {
                            private const string URLPATH = "~/Scripts/DataTables-1.9.4/extras/FixedColumns/media/js";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string FixedColumns_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/FixedColumns.min.js") ? Url("FixedColumns.min.js") : Url("FixedColumns.js");
                            public static readonly string FixedColumns_min_js = Url("FixedColumns.min.js");
                            public static readonly string FixedColumns_min_js_gz = Url("FixedColumns.min.js.gz");
                        }
                    
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class Scroller {
                    private const string URLPATH = "~/Scripts/DataTables-1.9.4/extras/Scroller";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class media {
                        private const string URLPATH = "~/Scripts/DataTables-1.9.4/extras/Scroller/media";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class docs {
                            private const string URLPATH = "~/Scripts/DataTables-1.9.4/extras/Scroller/media/docs";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class media {
                                private const string URLPATH = "~/Scripts/DataTables-1.9.4/extras/Scroller/media/docs/media";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                public static class js {
                                    private const string URLPATH = "~/Scripts/DataTables-1.9.4/extras/Scroller/media/docs/media/js";
                                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                    public static readonly string doc_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/doc.min.js") ? Url("doc.min.js") : Url("doc.js");
                                    public static readonly string jquery_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.min.js") ? Url("jquery.min.js") : Url("jquery.js");
                                    public static readonly string shBrushJScript_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shBrushJScript.min.js") ? Url("shBrushJScript.min.js") : Url("shBrushJScript.js");
                                    public static readonly string shCore_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shCore.min.js") ? Url("shCore.min.js") : Url("shCore.js");
                                }
                            
                            }
                        
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class js {
                            private const string URLPATH = "~/Scripts/DataTables-1.9.4/extras/Scroller/media/js";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string dataTables_scroller_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dataTables.scroller.min.js") ? Url("dataTables.scroller.min.js") : Url("dataTables.scroller.js");
                            public static readonly string dataTables_scroller_min_js = Url("dataTables.scroller.min.js");
                            public static readonly string dataTables_scroller_min_js_gz = Url("dataTables.scroller.min.js.gz");
                        }
                    
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class TableTools {
                    private const string URLPATH = "~/Scripts/DataTables-1.9.4/extras/TableTools";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class media {
                        private const string URLPATH = "~/Scripts/DataTables-1.9.4/extras/TableTools/media";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class js {
                            private const string URLPATH = "~/Scripts/DataTables-1.9.4/extras/TableTools/media/js";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string TableTools_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/TableTools.min.js") ? Url("TableTools.min.js") : Url("TableTools.js");
                            public static readonly string TableTools_min_js = Url("TableTools.min.js");
                            public static readonly string TableTools_min_js_gz = Url("TableTools.min.js.gz");
                            public static readonly string ZeroClipboard_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ZeroClipboard.min.js") ? Url("ZeroClipboard.min.js") : Url("ZeroClipboard.js");
                        }
                    
                    }
                
                }
            
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class media {
                private const string URLPATH = "~/Scripts/DataTables-1.9.4/media";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class js {
                    private const string URLPATH = "~/Scripts/DataTables-1.9.4/media/js";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string jquery_dataTables_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.dataTables.min.js") ? Url("jquery.dataTables.min.js") : Url("jquery.dataTables.js");
                    public static readonly string jquery_dataTables_min_js = Url("jquery.dataTables.min.js");
                    public static readonly string jquery_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.min.js") ? Url("jquery.min.js") : Url("jquery.js");
                }
            
            }
        
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class flot {
            private const string URLPATH = "~/Scripts/flot";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string excanvas_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/excanvas.min.js") ? Url("excanvas.min.js") : Url("excanvas.js");
            public static readonly string excanvas_min_js = Url("excanvas.min.js");
            public static readonly string jquery_colorhelpers_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.colorhelpers.min.js") ? Url("jquery.colorhelpers.min.js") : Url("jquery.colorhelpers.js");
            public static readonly string jquery_colorhelpers_min_js = Url("jquery.colorhelpers.min.js");
            public static readonly string jquery_flot_canvas_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.flot.canvas.min.js") ? Url("jquery.flot.canvas.min.js") : Url("jquery.flot.canvas.js");
            public static readonly string jquery_flot_canvas_min_js = Url("jquery.flot.canvas.min.js");
            public static readonly string jquery_flot_categories_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.flot.categories.min.js") ? Url("jquery.flot.categories.min.js") : Url("jquery.flot.categories.js");
            public static readonly string jquery_flot_categories_min_js = Url("jquery.flot.categories.min.js");
            public static readonly string jquery_flot_crosshair_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.flot.crosshair.min.js") ? Url("jquery.flot.crosshair.min.js") : Url("jquery.flot.crosshair.js");
            public static readonly string jquery_flot_crosshair_min_js = Url("jquery.flot.crosshair.min.js");
            public static readonly string jquery_flot_errorbars_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.flot.errorbars.min.js") ? Url("jquery.flot.errorbars.min.js") : Url("jquery.flot.errorbars.js");
            public static readonly string jquery_flot_errorbars_min_js = Url("jquery.flot.errorbars.min.js");
            public static readonly string jquery_flot_fillbetween_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.flot.fillbetween.min.js") ? Url("jquery.flot.fillbetween.min.js") : Url("jquery.flot.fillbetween.js");
            public static readonly string jquery_flot_fillbetween_min_js = Url("jquery.flot.fillbetween.min.js");
            public static readonly string jquery_flot_image_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.flot.image.min.js") ? Url("jquery.flot.image.min.js") : Url("jquery.flot.image.js");
            public static readonly string jquery_flot_image_min_js = Url("jquery.flot.image.min.js");
            public static readonly string jquery_flot_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.flot.min.js") ? Url("jquery.flot.min.js") : Url("jquery.flot.js");
            public static readonly string jquery_flot_min_js = Url("jquery.flot.min.js");
            public static readonly string jquery_flot_navigate_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.flot.navigate.min.js") ? Url("jquery.flot.navigate.min.js") : Url("jquery.flot.navigate.js");
            public static readonly string jquery_flot_navigate_min_js = Url("jquery.flot.navigate.min.js");
            public static readonly string jquery_flot_pie_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.flot.pie.min.js") ? Url("jquery.flot.pie.min.js") : Url("jquery.flot.pie.js");
            public static readonly string jquery_flot_pie_min_js = Url("jquery.flot.pie.min.js");
            public static readonly string jquery_flot_resize_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.flot.resize.min.js") ? Url("jquery.flot.resize.min.js") : Url("jquery.flot.resize.js");
            public static readonly string jquery_flot_resize_min_js = Url("jquery.flot.resize.min.js");
            public static readonly string jquery_flot_selection_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.flot.selection.min.js") ? Url("jquery.flot.selection.min.js") : Url("jquery.flot.selection.js");
            public static readonly string jquery_flot_selection_min_js = Url("jquery.flot.selection.min.js");
            public static readonly string jquery_flot_stack_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.flot.stack.min.js") ? Url("jquery.flot.stack.min.js") : Url("jquery.flot.stack.js");
            public static readonly string jquery_flot_stack_min_js = Url("jquery.flot.stack.min.js");
            public static readonly string jquery_flot_symbol_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.flot.symbol.min.js") ? Url("jquery.flot.symbol.min.js") : Url("jquery.flot.symbol.js");
            public static readonly string jquery_flot_symbol_min_js = Url("jquery.flot.symbol.min.js");
            public static readonly string jquery_flot_threshold_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.flot.threshold.min.js") ? Url("jquery.flot.threshold.min.js") : Url("jquery.flot.threshold.js");
            public static readonly string jquery_flot_threshold_min_js = Url("jquery.flot.threshold.min.js");
            public static readonly string jquery_flot_time_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.flot.time.min.js") ? Url("jquery.flot.time.min.js") : Url("jquery.flot.time.js");
            public static readonly string jquery_flot_time_min_js = Url("jquery.flot.time.min.js");
        }
    
        public static readonly string ie8_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ie8.min.js") ? Url("ie8.min.js") : Url("ie8.js");
        public static readonly string jquery_1_10_2_intellisense_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-1.10.2.intellisense.min.js") ? Url("jquery-1.10.2.intellisense.min.js") : Url("jquery-1.10.2.intellisense.js");
        public static readonly string jquery_1_10_2_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-1.10.2.min.js") ? Url("jquery-1.10.2.min.js") : Url("jquery-1.10.2.js");
        public static readonly string jquery_1_10_2_min_js = Url("jquery-1.10.2.min.js");
        public static readonly string jquery_1_10_2_min_map = Url("jquery-1.10.2.min.map");
        public static readonly string jquery_treetable_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.treetable.min.js") ? Url("jquery.treetable.min.js") : Url("jquery.treetable.js");
        public static readonly string jquery_treetablePersist_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.treetablePersist.min.js") ? Url("jquery.treetablePersist.min.js") : Url("jquery.treetablePersist.js");
        public static readonly string modernizr_2_6_2_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/modernizr-2.6.2.min.js") ? Url("modernizr-2.6.2.min.js") : Url("modernizr-2.6.2.js");
        public static readonly string respond_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/respond.min.js") ? Url("respond.min.js") : Url("respond.js");
        public static readonly string respond_min_js = Url("respond.min.js");
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Content {
        private const string URLPATH = "~/Content";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        public static readonly string bootstrap_theme_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-theme.min.css") ? Url("bootstrap-theme.min.css") : Url("bootstrap-theme.css");
             
        public static readonly string bootstrap_theme_min_css = Url("bootstrap-theme.min.css");
        public static readonly string bootstrap_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap.min.css") ? Url("bootstrap.min.css") : Url("bootstrap.css");
             
        public static readonly string bootstrap_min_css = Url("bootstrap.min.css");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class DataTables_1_9_4 {
            private const string URLPATH = "~/Content/DataTables-1.9.4";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class docs {
                private const string URLPATH = "~/Content/DataTables-1.9.4/docs";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class media {
                    private const string URLPATH = "~/Content/DataTables-1.9.4/docs/media";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class css {
                        private const string URLPATH = "~/Content/DataTables-1.9.4/docs/media/css";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string doc_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/doc.min.css") ? Url("doc.min.css") : Url("doc.css");
                             
                        public static readonly string shCore_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shCore.min.css") ? Url("shCore.min.css") : Url("shCore.css");
                             
                        public static readonly string shThemeDataTables_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shThemeDataTables.min.css") ? Url("shThemeDataTables.min.css") : Url("shThemeDataTables.css");
                             
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class images {
                        private const string URLPATH = "~/Content/DataTables-1.9.4/docs/media/images";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string arrow_jpg = Url("arrow.jpg");
                        public static readonly string arrow_png = Url("arrow.png");
                        public static readonly string extended_png = Url("extended.png");
                    }
                
                }
            
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class extras {
                private const string URLPATH = "~/Content/DataTables-1.9.4/extras";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class AutoFill {
                    private const string URLPATH = "~/Content/DataTables-1.9.4/extras/AutoFill";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class media {
                        private const string URLPATH = "~/Content/DataTables-1.9.4/extras/AutoFill/media";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class css {
                            private const string URLPATH = "~/Content/DataTables-1.9.4/extras/AutoFill/media/css";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string AutoFill_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/AutoFill.min.css") ? Url("AutoFill.min.css") : Url("AutoFill.css");
                                 
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class docs {
                            private const string URLPATH = "~/Content/DataTables-1.9.4/extras/AutoFill/media/docs";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class media {
                                private const string URLPATH = "~/Content/DataTables-1.9.4/extras/AutoFill/media/docs/media";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                public static class css {
                                    private const string URLPATH = "~/Content/DataTables-1.9.4/extras/AutoFill/media/docs/media/css";
                                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                    public static readonly string doc_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/doc.min.css") ? Url("doc.min.css") : Url("doc.css");
                                         
                                    public static readonly string shCore_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shCore.min.css") ? Url("shCore.min.css") : Url("shCore.css");
                                         
                                    public static readonly string shThemeDataTables_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shThemeDataTables.min.css") ? Url("shThemeDataTables.min.css") : Url("shThemeDataTables.css");
                                         
                                }
                            
                                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                public static class images {
                                    private const string URLPATH = "~/Content/DataTables-1.9.4/extras/AutoFill/media/docs/media/images";
                                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                    public static readonly string arrow_jpg = Url("arrow.jpg");
                                    public static readonly string arrow_png = Url("arrow.png");
                                    public static readonly string extended_png = Url("extended.png");
                                }
                            
                            }
                        
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class images {
                            private const string URLPATH = "~/Content/DataTables-1.9.4/extras/AutoFill/media/images";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string filler_png = Url("filler.png");
                        }
                    
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class ColReorder {
                    private const string URLPATH = "~/Content/DataTables-1.9.4/extras/ColReorder";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class media {
                        private const string URLPATH = "~/Content/DataTables-1.9.4/extras/ColReorder/media";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class css {
                            private const string URLPATH = "~/Content/DataTables-1.9.4/extras/ColReorder/media/css";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string ColReorder_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ColReorder.min.css") ? Url("ColReorder.min.css") : Url("ColReorder.css");
                                 
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class docs {
                            private const string URLPATH = "~/Content/DataTables-1.9.4/extras/ColReorder/media/docs";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class media {
                                private const string URLPATH = "~/Content/DataTables-1.9.4/extras/ColReorder/media/docs/media";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                public static class css {
                                    private const string URLPATH = "~/Content/DataTables-1.9.4/extras/ColReorder/media/docs/media/css";
                                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                    public static readonly string doc_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/doc.min.css") ? Url("doc.min.css") : Url("doc.css");
                                         
                                    public static readonly string shCore_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shCore.min.css") ? Url("shCore.min.css") : Url("shCore.css");
                                         
                                    public static readonly string shThemeDataTables_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shThemeDataTables.min.css") ? Url("shThemeDataTables.min.css") : Url("shThemeDataTables.css");
                                         
                                }
                            
                                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                public static class images {
                                    private const string URLPATH = "~/Content/DataTables-1.9.4/extras/ColReorder/media/docs/media/images";
                                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                    public static readonly string arrow_jpg = Url("arrow.jpg");
                                    public static readonly string arrow_png = Url("arrow.png");
                                    public static readonly string extended_png = Url("extended.png");
                                }
                            
                            }
                        
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class images {
                            private const string URLPATH = "~/Content/DataTables-1.9.4/extras/ColReorder/media/images";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string insert_png = Url("insert.png");
                        }
                    
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class ColVis {
                    private const string URLPATH = "~/Content/DataTables-1.9.4/extras/ColVis";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class media {
                        private const string URLPATH = "~/Content/DataTables-1.9.4/extras/ColVis/media";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class css {
                            private const string URLPATH = "~/Content/DataTables-1.9.4/extras/ColVis/media/css";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string ColVis_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ColVis.min.css") ? Url("ColVis.min.css") : Url("ColVis.css");
                                 
                            public static readonly string ColVisAlt_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ColVisAlt.min.css") ? Url("ColVisAlt.min.css") : Url("ColVisAlt.css");
                                 
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class docs {
                            private const string URLPATH = "~/Content/DataTables-1.9.4/extras/ColVis/media/docs";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class media {
                                private const string URLPATH = "~/Content/DataTables-1.9.4/extras/ColVis/media/docs/media";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                public static class css {
                                    private const string URLPATH = "~/Content/DataTables-1.9.4/extras/ColVis/media/docs/media/css";
                                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                    public static readonly string doc_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/doc.min.css") ? Url("doc.min.css") : Url("doc.css");
                                         
                                    public static readonly string shCore_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shCore.min.css") ? Url("shCore.min.css") : Url("shCore.css");
                                         
                                    public static readonly string shThemeDataTables_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shThemeDataTables.min.css") ? Url("shThemeDataTables.min.css") : Url("shThemeDataTables.css");
                                         
                                }
                            
                                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                public static class images {
                                    private const string URLPATH = "~/Content/DataTables-1.9.4/extras/ColVis/media/docs/media/images";
                                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                    public static readonly string arrow_jpg = Url("arrow.jpg");
                                    public static readonly string arrow_png = Url("arrow.png");
                                    public static readonly string extended_png = Url("extended.png");
                                }
                            
                            }
                        
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class images {
                            private const string URLPATH = "~/Content/DataTables-1.9.4/extras/ColVis/media/images";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string button_png = Url("button.png");
                        }
                    
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class FixedColumns {
                    private const string URLPATH = "~/Content/DataTables-1.9.4/extras/FixedColumns";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class docs {
                        private const string URLPATH = "~/Content/DataTables-1.9.4/extras/FixedColumns/docs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class media {
                            private const string URLPATH = "~/Content/DataTables-1.9.4/extras/FixedColumns/docs/media";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class css {
                                private const string URLPATH = "~/Content/DataTables-1.9.4/extras/FixedColumns/docs/media/css";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                public static readonly string doc_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/doc.min.css") ? Url("doc.min.css") : Url("doc.css");
                                     
                                public static readonly string shCore_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shCore.min.css") ? Url("shCore.min.css") : Url("shCore.css");
                                     
                                public static readonly string shThemeDataTables_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shThemeDataTables.min.css") ? Url("shThemeDataTables.min.css") : Url("shThemeDataTables.css");
                                     
                            }
                        
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class images {
                                private const string URLPATH = "~/Content/DataTables-1.9.4/extras/FixedColumns/docs/media/images";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                public static readonly string arrow_jpg = Url("arrow.jpg");
                                public static readonly string arrow_png = Url("arrow.png");
                                public static readonly string extended_png = Url("extended.png");
                            }
                        
                        }
                    
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class Scroller {
                    private const string URLPATH = "~/Content/DataTables-1.9.4/extras/Scroller";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class media {
                        private const string URLPATH = "~/Content/DataTables-1.9.4/extras/Scroller/media";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class css {
                            private const string URLPATH = "~/Content/DataTables-1.9.4/extras/Scroller/media/css";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string dataTables_scroller_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dataTables.scroller.min.css") ? Url("dataTables.scroller.min.css") : Url("dataTables.scroller.css");
                                 
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class docs {
                            private const string URLPATH = "~/Content/DataTables-1.9.4/extras/Scroller/media/docs";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class media {
                                private const string URLPATH = "~/Content/DataTables-1.9.4/extras/Scroller/media/docs/media";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                public static class css {
                                    private const string URLPATH = "~/Content/DataTables-1.9.4/extras/Scroller/media/docs/media/css";
                                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                    public static readonly string doc_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/doc.min.css") ? Url("doc.min.css") : Url("doc.css");
                                         
                                    public static readonly string shCore_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shCore.min.css") ? Url("shCore.min.css") : Url("shCore.css");
                                         
                                    public static readonly string shThemeDataTables_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shThemeDataTables.min.css") ? Url("shThemeDataTables.min.css") : Url("shThemeDataTables.css");
                                         
                                }
                            
                                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                public static class images {
                                    private const string URLPATH = "~/Content/DataTables-1.9.4/extras/Scroller/media/docs/media/images";
                                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                    public static readonly string arrow_jpg = Url("arrow.jpg");
                                    public static readonly string arrow_png = Url("arrow.png");
                                    public static readonly string extended_png = Url("extended.png");
                                }
                            
                            }
                        
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class images {
                            private const string URLPATH = "~/Content/DataTables-1.9.4/extras/Scroller/media/images";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string loading_background_png = Url("loading-background.png");
                        }
                    
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class TableTools {
                    private const string URLPATH = "~/Content/DataTables-1.9.4/extras/TableTools";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class media {
                        private const string URLPATH = "~/Content/DataTables-1.9.4/extras/TableTools/media";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class css {
                            private const string URLPATH = "~/Content/DataTables-1.9.4/extras/TableTools/media/css";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string TableTools_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/TableTools.min.css") ? Url("TableTools.min.css") : Url("TableTools.css");
                                 
                            public static readonly string TableTools_JUI_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/TableTools_JUI.min.css") ? Url("TableTools_JUI.min.css") : Url("TableTools_JUI.css");
                                 
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class images {
                            private const string URLPATH = "~/Content/DataTables-1.9.4/extras/TableTools/media/images";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string background_png = Url("background.png");
                            public static readonly string collection_png = Url("collection.png");
                            public static readonly string collection_hover_png = Url("collection_hover.png");
                            public static readonly string copy_png = Url("copy.png");
                            public static readonly string copy_hover_png = Url("copy_hover.png");
                            public static readonly string csv_png = Url("csv.png");
                            public static readonly string csv_hover_png = Url("csv_hover.png");
                            public static readonly string pdf_png = Url("pdf.png");
                            public static readonly string pdf_hover_png = Url("pdf_hover.png");
                            public static readonly string print_png = Url("print.png");
                            public static readonly string print_hover_png = Url("print_hover.png");
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class psd {
                                private const string URLPATH = "~/Content/DataTables-1.9.4/extras/TableTools/media/images/psd";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                public static readonly string collection_psd = Url("collection.psd");
                                public static readonly string copy_document_psd = Url("copy document.psd");
                                public static readonly string file_types_psd = Url("file_types.psd");
                                public static readonly string printer_psd = Url("printer.psd");
                            }
                        
                            public static readonly string xls_png = Url("xls.png");
                            public static readonly string xls_hover_png = Url("xls_hover.png");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class swf {
                            private const string URLPATH = "~/Content/DataTables-1.9.4/extras/TableTools/media/swf";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string copy_csv_xls_swf = Url("copy_csv_xls.swf");
                            public static readonly string copy_csv_xls_pdf_swf = Url("copy_csv_xls_pdf.swf");
                        }
                    
                    }
                
                }
            
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class media {
                private const string URLPATH = "~/Content/DataTables-1.9.4/media";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class css {
                    private const string URLPATH = "~/Content/DataTables-1.9.4/media/css";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string demo_page_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/demo_page.min.css") ? Url("demo_page.min.css") : Url("demo_page.css");
                         
                    public static readonly string demo_table_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/demo_table.min.css") ? Url("demo_table.min.css") : Url("demo_table.css");
                         
                    public static readonly string demo_table_jui_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/demo_table_jui.min.css") ? Url("demo_table_jui.min.css") : Url("demo_table_jui.css");
                         
                    public static readonly string jquery_dataTables_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.dataTables.min.css") ? Url("jquery.dataTables.min.css") : Url("jquery.dataTables.css");
                         
                    public static readonly string jquery_dataTables_themeroller_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.dataTables_themeroller.min.css") ? Url("jquery.dataTables_themeroller.min.css") : Url("jquery.dataTables_themeroller.css");
                         
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class images {
                    private const string URLPATH = "~/Content/DataTables-1.9.4/media/images";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string back_disabled_png = Url("back_disabled.png");
                    public static readonly string back_enabled_png = Url("back_enabled.png");
                    public static readonly string back_enabled_hover_png = Url("back_enabled_hover.png");
                    public static readonly string favicon_ico = Url("favicon.ico");
                    public static readonly string forward_disabled_png = Url("forward_disabled.png");
                    public static readonly string forward_enabled_png = Url("forward_enabled.png");
                    public static readonly string forward_enabled_hover_png = Url("forward_enabled_hover.png");
                    public static readonly string sort_asc_png = Url("sort_asc.png");
                    public static readonly string sort_asc_disabled_png = Url("sort_asc_disabled.png");
                    public static readonly string sort_both_png = Url("sort_both.png");
                    public static readonly string sort_desc_png = Url("sort_desc.png");
                    public static readonly string sort_desc_disabled_png = Url("sort_desc_disabled.png");
                    public static readonly string Sorting_icons_psd = Url("Sorting icons.psd");
                }
            
            }
        
        }
    
        public static readonly string flot_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/flot.min.css") ? Url("flot.min.css") : Url("flot.css");
             
        public static readonly string jquery_treetable_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.treetable.min.css") ? Url("jquery.treetable.min.css") : Url("jquery.treetable.css");
             
        public static readonly string jquery_treetable_theme_default_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.treetable.theme.default.min.css") ? Url("jquery.treetable.theme.default.min.css") : Url("jquery.treetable.theme.default.css");
             
        public static readonly string Site_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Site.min.css") ? Url("Site.min.css") : Url("Site.css");
             
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static partial class Bundles
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static partial class Scripts {}
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static partial class Styles {}
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal static class T4MVCHelpers {
    // You can change the ProcessVirtualPath method to modify the path that gets returned to the client.
    // e.g. you can prepend a domain, or append a query string:
    //      return "http://localhost" + path + "?foo=bar";
    private static string ProcessVirtualPathDefault(string virtualPath) {
        // The path that comes in starts with ~/ and must first be made absolute
        string path = VirtualPathUtility.ToAbsolute(virtualPath);
        
        // Add your own modifications here before returning the path
        return path;
    }

    // Calling ProcessVirtualPath through delegate to allow it to be replaced for unit testing
    public static Func<string, string> ProcessVirtualPath = ProcessVirtualPathDefault;

    // Calling T4Extension.TimestampString through delegate to allow it to be replaced for unit testing and other purposes
    public static Func<string, string> TimestampString = System.Web.Mvc.T4Extensions.TimestampString;

    // Logic to determine if the app is running in production or dev environment
    public static bool IsProduction() { 
        return (HttpContext.Current != null && !HttpContext.Current.IsDebuggingEnabled); 
    }
}





#endregion T4MVC
#pragma warning restore 1591



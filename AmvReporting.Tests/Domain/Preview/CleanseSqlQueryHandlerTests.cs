using System;
using AmvReporting.Domain.Preview.Queries;
using Xunit;
using Xunit.Extensions;

namespace AmvReporting.Tests.Domain.Preview
{
    public class CleanseSqlQueryHandlerTests
    {
        [Theory, 
        InlineData("select * from __SOMEVIEWNAME", "select * from __SOMEVIEWNAME"),
        InlineData("SELECT     TOP 100 PERCENT &amp;#13;&amp;#9;dbo.YETANOTHERLARGETABLENAME.REFERENCENUMBER AS EmplNo, &amp;#13;&amp;#9;dbo.YETANOTHERLARGETABLENAME.LASTNAME AS [Last Name], &amp;#13;&amp;#9;dbo.YETANOTHERLARGETABLENAME.FIRSTNAME AS [First Name],&amp;#13;&amp;#9;dbo.TABLESEVEN.NAME AS [Area/Office], &amp;#13;&amp;#9;dbo.TABLETHREE.NAME AS [Service/Team], &amp;#13;&amp;#9;ISNULL(CONVERT(CHAR(20), dbo.RANDOMNAMEFORTABLE.COSTCENTRE), 'Not Yet Assigned') AS [Cost Centre]&amp;#13;FROM         dbo.YETANOTHERLARGETABLENAME INNER JOIN&amp;#13;                      dbo.RANDOMNAMEFORTABLE11 ON dbo.YETANOTHERLARGETABLENAME.REFERENCE_ID = dbo.RANDOMNAMEFORTABLE11.REFERENCE_ID INNER JOIN&amp;#13;                      dbo.TABLETHREE ON dbo.RANDOMNAMEFORTABLE11.ORGLEVEL3 = dbo.TABLETHREE.ORGLEVEL3_ID LEFT OUTER JOIN&amp;#13;                      dbo.RANDOMNAMEFORTABLE ON dbo.TABLETHREE.COSTCENTRE = dbo.RANDOMNAMEFORTABLE.COSTCENTRES_ID INNER JOIN&amp;#13;&amp;#9;&amp;#9;&amp;#9;&amp;#9;&amp;#9;  dbo.TABLESEVEN on dbo.RANDOMNAMEFORTABLE11.ORGLEVEL2 = dbo.TABLESEVEN.SOMETABLE_ID&amp;#13;WHERE     (dbo.RANDOMNAMEFORTABLE11.EFFECTIVEDATE &amp;lt;= dbo.__SQLFUNCTION_DOM(GETDATE())) AND (dbo.RANDOMNAMEFORTABLE11.ENDDATE &amp;gt;= dbo.__CCC_FDOM(GETDATE()) OR&amp;#13;                      dbo.RANDOMNAMEFORTABLE11.ENDDATE IS NULL) AND (dbo.RANDOMNAMEFORTABLE11.CURRENTRECORD = N'YES')&amp;#13;ORDER BY dbo.YETANOTHERLARGETABLENAME.LASTNAME, dbo.YETANOTHERLARGETABLENAME.FIRSTNAME",
            "SELECT TOP 100 PERCENT dbo.YETANOTHERLARGETABLENAME.REFERENCENUMBER AS EmplNo, dbo.YETANOTHERLARGETABLENAME.LASTNAME AS [Last Name], dbo.YETANOTHERLARGETABLENAME.FIRSTNAME AS [First Name], dbo.TABLESEVEN.NAME AS [Area/Office], dbo.TABLETHREE.NAME AS [Service/Team], ISNULL(CONVERT(CHAR(20), dbo.RANDOMNAMEFORTABLE.COSTCENTRE), 'Not Yet Assigned') AS [Cost Centre] FROM dbo.YETANOTHERLARGETABLENAME INNER JOIN dbo.RANDOMNAMEFORTABLE11 ON dbo.YETANOTHERLARGETABLENAME.REFERENCE_ID = dbo.RANDOMNAMEFORTABLE11.REFERENCE_ID INNER JOIN dbo.TABLETHREE ON dbo.RANDOMNAMEFORTABLE11.ORGLEVEL3 = dbo.TABLETHREE.ORGLEVEL3_ID LEFT OUTER JOIN dbo.RANDOMNAMEFORTABLE ON dbo.TABLETHREE.COSTCENTRE = dbo.RANDOMNAMEFORTABLE.COSTCENTRES_ID INNER JOIN dbo.TABLESEVEN on dbo.RANDOMNAMEFORTABLE11.ORGLEVEL2 = dbo.TABLESEVEN.SOMETABLE_ID WHERE (dbo.RANDOMNAMEFORTABLE11.EFFECTIVEDATE <= dbo.__SQLFUNCTION_DOM(GETDATE())) AND (dbo.RANDOMNAMEFORTABLE11.ENDDATE >= dbo.__CCC_FDOM(GETDATE()) OR dbo.RANDOMNAMEFORTABLE11.ENDDATE IS NULL) AND (dbo.RANDOMNAMEFORTABLE11.CURRENTRECORD = N'YES') ORDER BY dbo.YETANOTHERLARGETABLENAME.LASTNAME, dbo.YETANOTHERLARGETABLENAME.FIRSTNAME"),
        InlineData("SELECT     Area, COUNT(FULLNAME) AS Expr1&amp;#13;FROM         (SELECT     TOP (100) PERCENT dbo.TABLESEVEN.NAME AS Area, dbo.TABLEEIGHT.FULLNAME&amp;#13;                       FROM          dbo.TABLENINE INNER JOIN&amp;#13;                                              dbo.TABLEEIGHT ON dbo.TABLENINE.SERVICEUSERS_ID = dbo.TABLEEIGHT.YETANOTHER_ID INNER JOIN&amp;#13;                                              dbo.TABLETHREE ON dbo.TABLENINE.ASSOCIATEDSERVICE = dbo.TABLETHREE.ORGLEVEL3_ID INNER JOIN&amp;#13;                                              dbo.TABLESEVEN ON dbo.TABLETHREE.ORGLEVEL2 = dbo.TABLESEVEN.SOMETABLE_ID&amp;#13;                       WHERE      (dbo.TABLEEIGHT.CURRENTSTATUS = 'ACTIVE')&amp;#13;                       GROUP BY dbo.TABLESEVEN.NAME, dbo.TABLEEIGHT.FULLNAME&amp;#13;                       ORDER BY Area) AS derivedtbl_1&amp;#13;GROUP BY Area", 
            "SELECT Area, COUNT(FULLNAME) AS Expr1 FROM (SELECT TOP (100) PERCENT dbo.TABLESEVEN.NAME AS Area, dbo.TABLEEIGHT.FULLNAME FROM dbo.TABLENINE INNER JOIN dbo.TABLEEIGHT ON dbo.TABLENINE.SERVICEUSERS_ID = dbo.TABLEEIGHT.YETANOTHER_ID INNER JOIN dbo.TABLETHREE ON dbo.TABLENINE.ASSOCIATEDSERVICE = dbo.TABLETHREE.ORGLEVEL3_ID INNER JOIN dbo.TABLESEVEN ON dbo.TABLETHREE.ORGLEVEL2 = dbo.TABLESEVEN.SOMETABLE_ID WHERE (dbo.TABLEEIGHT.CURRENTSTATUS = 'ACTIVE') GROUP BY dbo.TABLESEVEN.NAME, dbo.TABLEEIGHT.FULLNAME ORDER BY Area) AS derivedtbl_1 GROUP BY Area")]
        public void Handle_ConvertsHtml_IntoPlainSql(String dirtySql, String expected)
        {
            //Arrange
            var sut = new CleanseSqlQueryHandler();

            var query = new CleanseSqlQuery(dirtySql);

            // Act
            var result = sut.Handle(query);

            // Assert
            Assert.Equal(expected, result);
        }
    }
}
